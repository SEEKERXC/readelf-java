plugins {
  id 'signing'
  id "maven-publish"
  id "java-library"
  id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

repositories {
  mavenCentral()
}

group = "net.fornwall"
version = "0.7.0"
sourceCompatibility = 1.8

dependencies {
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
  testRuntimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
}

java {
  withJavadocJar()
  withSourcesJar()
}

test {
  systemProperty "jelf.version", project.version.toString()
  useJUnitPlatform()
  afterTest { desc, result ->
    println "Test ${desc.name} [${desc.className}] result: ${result.resultType}"
  }
}

// See https://docs.gradle.org/current/userguide/publishing_maven.html
// and https://github.com/gradle-nexus/publish-plugin
/*
 gpg --keyring secring.gpg --export-secret-keys > ~/.gnupg/secring.gpg

 gradle --info \
   -PsonatypeUsername=xxx \
   -PsonatypePassword=xxx \
   -Psigning.keyId=xxx \
   -Psigning.password=xxx \
   -Psigning.secretKeyRingFile=$HOME/.gnupg/secring.gpg \
   publishToSonatype \
   closeAndReleaseSonatypeStagingRepository
*/
nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'jelf'
			from components.java
			pom {
				name = 'JElf'
				description = 'ELF parsing library in java'
				url = 'https://github.com/fornwall/jelf'
				licenses {
					license {
						name = 'The MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				developers {
					developer {
						id = 'fornwall'
						name = 'Fredrik Fornwall'
						email = 'fredrik@fornwall.net'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/fornwall/jelf.git'
					developerConnection = 'scm:git:ssh://git@github.com/fornwall/jelf.git'
					url = 'https://github.com/fornwall/jelf/'
				}
			}
		}
	}
}

signing {
  sign publishing.publications.mavenJava
}

javadoc {
  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}

